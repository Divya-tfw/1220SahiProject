_include("12TwentyData.sah");
_include("12TwentyOR.sah");
    
     //Read Filter data from Excel Sheet
    var $data;
    var $sSite ;
  	var $sGradYear;
	var $sGradTerm;
	var $sOfferTiming ;
	var $sJobPhase;
    var $sWorkAuth;
	var $sEmpType;
    var $sRumorJob;
	var $sIncludeRoport;
    var $sDegreelevel;
	var $sCollege;
    var $sDepartment;
    var $sProgram;
	var $sUndergradMajor;
    var $TestFail=0;
    var  $sRunStatus;
    var  $sSiteType;
    var $sSubReport;
    var $DatafileName;
    var $sReportName;
    var $sCutoffDate;
    //table data
    var $Tabledata = [];
    var $Tabledata1 = [];
  	var $arr = [];
    //data verify
    var $actual=[];
    var $expected=[];
/******************* Login ***********************/
/*
    Method name	:  login12Twenty
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to launch URL & login to 12Twenty POrtal .
    Input			  :   URL, UserName,Password
*/

//Login to 12twenty
function login12Twenty($Url, $Username, $Password){
    //navigate url
	_navigateTo($Url);
   //Enter Username
	_setValue(_emailbox($txt_UserName), $Username);
   //Enter Password
	_setValue(_password($txt_Password), $Password);
  //Click LOgin
	_click(_link("Log in"));
}
/*********************Read Filter Data From Excel ***************************/
/*
    Method name	:  readFilterData
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to read filterdata .
    Input			  :   test case number,Report Name
*/
//read filter data				
function readFilterData($k,$sReportName)
{
  $data = _readExcelFile($path_datafile,$sReportName);
  $sRunStatus = $data[$k]["Run status"];
  $sSiteType = $data[$k]["Site Instance Type"];
  $sSite = $data[$k]["Site Instance"];
  $sGradYear = $data[$k]["Grad Class"];
  $sGradTerm = $data[$k]["Grad Term"];
  $sOfferTiming = $data[$k]["Offer Timing"];
  $sJobPhase = $data[$k]["Job Phase"];
  $sJointDegree = $data[$k]["Joint Degree"];
  $sReportingMajor = $data[$k]["Reporting Major"];
  $sCutoffDate = $data[$k]["Include Rumor Jobs"];
  $sIncludeRoport = $data[$k]["Included in Reporting"];
  $sDegreelevel = $data[$k]["Degree Level"];
  $sCollege = $data[$k]["College / School"];
  $sProgram = $data[$k]["Program"];
 $sUndergradMajor= $data[$k]["Undergrad Major"];
  $sCutoffDate = $data[$k]["Cutoff Date"];
  $sSubReport = $data[$k]["Sub Report"];
  $DatafileName = $data[$k]["DataFileName"];  
}

/*******************Baseline Reoprts******************/
					/*************MBA Standard Reports*************/
/*
    Method name	:  MBA_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Baseline MBA Standard Reports  .
    Input			  :   Excel file path,Report Name
*/
//MBA Standard Reports Baseline
function MBA_Baseline($path,$stest)
{
  //read Excel data file 
  var $data1=_readExcelFile($path,$stest);
  
  //continue the script execution if failure occurs
  _continueOnError();    
//for(var $loop=0;$loop<$data1.length;$loop++) 
  for(var $loop=0;$loop<1;$loop++) 
 {
  //read filter data  
  readFilterData($loop,$stest); 
          //Condition for Runstatus
          if($sRunStatus=="Y") 
          {       _log("RunStatus Y");
                  //check site instance type  
                   if($sSiteType=="MBA Standard Reports (12)") 
                   {       
                           //check site instance
                            if($sSite=="Texas_FTMBA")
                           {   
                            //login 
                           login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                           }
                           else if($sSite=="Texas_PTMBA")
                           {
                            //login
                            login12Twenty($sTexas_PTMBA,$sUsername,$sPassword);
                             _log("Login to texas mba"+$loop);
                           } 
                           else
                           {
                             //login 
                             login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                           } 
                            //navigationToMBAStandardReport();
                     		navigationToStandardReport();
                             //click on MBA Reports	
                              _click(_link($tab_mba_report));
                            //click on subreport type
                    		_click(_link($link_generate, _near(_cell($sSubReport))));
                            //select filte values
                            selectFilterValuesMBA_Standard_Reports();
                     	 	if($sSubReport =="Compensation Report ")
        					{  						  
                              	//Write Into MBA Compensation Report 
                              	WriteIntoMBA_Compensation_Report();                                                    
                         	} 
                        	else  
                         	{   
                              //write table data in to csv
                               WriteToCSV();  
                            }
                            //logout  
                            logout12Twenty();
                     	   _log("MBA Standard Report Baseline Task -Passed"+$loop); 
                   }
            		else
                   {
                     		_log("MBA Standard Report Baseline Task -Failed"+$loop); 
                   } 
            
          }
   		 else
         {
             _log("RunStatus N");
          }                
  	}    
 }
 
		/*********Business Week Baseline*********/
/*
    Method name	:  BusinessWeek_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Baseline Business Week Reports  .
    Input			  :   Excel file path,Report Name
*/
//Business week baseline reports
function BusinessWeek_Baseline($path,$stest)
{  
  //read excel data file
  var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    

    //for(var $loop=0;$loop<$data1.length;$loop++) 
 	for(var $loop=8;$loop<10;$loop++) 
     {
       //read filter data
      	readFilterData($loop,$stest); 
              //condition for run status
              if($sRunStatus=="Y") 
              {      
                        _log("RunStatus Y");
                       //check site instance type 
                       if($sSiteType=="Business Week Report (10)") 
                       {       //condition for site instance 
                                if($sSite=="Texas_FTMBA")
                               {   //login
                               		login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                               } 
                               else
                               {//login
                                 login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                               } 
                                //navigationToBusinessWeekReport();
                         		navigationToStandardReport();
                                //click on BWR reports 
                                _click(_link($tab_bwr_report));	
                                //click on subreport generate type
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                //select filter data
                                selectFilterValuesBusiness_Week_Reports();
                        		 
                                if($sSubReport=="Forgone Salary")
                                {
                                  	//write into csv file   
           		 					WriteToCSV(); 
                                }else if($sSubReport=="Top 15 Employers"||$sSubReport=="Internships"){
                                	//write into csv file   
           		 					  WriteToCSV(); 
                                    //write list file
                                    //var $listdata=_collectAttributes("_listItem","/.*/","sahiText",_in(_list("oneline ul"))); 
     								 //_log($listdata.length);    
     								//_writeCSVFile([$listdata],"D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv");
                                
                                }
                               else if($sSubReport=="Overall Employment"||$sSubReport=="Base Salary, Signing Bonus, & Other Guaranteed Compensation")
                               {
 									//write table data into csv file along list data
									WriteToCSV();
                                    //write list data in csv file  
                                    writeBWR_List(); 
                               }else{ 
                                    //write into csv of salary table(Q.83-Q.87)
                                      WriteToCSV_BWR_Salary();
                                }  
                                //logout
                                logout12Twenty();
                               _log("Business Week Baseline Task-Passed"+$loop);
                       }
                        else
                       {
                                _log("Business Week Baseline Task-Failed"+$loop);
                       } 
                 
          }
       	 else
       	 {
         	_log("RunStatus N");
         }           
    }//close for loop
}//close function
/*****************NACE Baseline*******************/
/*
    Method name	:  NaceReports_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Baseline NACE Reports  .
    Input			  :   Excel file path,Report Name
*/
//Nace Reports Baseline
function NaceReports_Baseline($path,$stest)
{    //read excel data file
	  var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    

    // for(var $loop=0;$loop<$data1.length;$loop++) 
      for(var $loop=8;$loop<12;$loop++)  
     {      
            //read filter data
       		readFilterData($loop , $stest);
            //check the run status 
            if($sRunStatus=="Y") 
          	{  
               _log("RunStatus Y");
              	//check site instance type
                  if($sSiteType=="NACE Report (7)") 
                  {  
                       //check the site instance 
                       if($sSite=="Fordham_Centralized")
                       { 
                       //login   
                       login12Twenty($sFordham_Centralized,$sUsername,$sPassword);
                       }
                       else
                       {
                         //login
                        login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                       } 
                   //navigationToNACEReport();
                   navigationToStandardReport();
                   //click on NACE Reports
                   _click(_link($tab_nace_report));
                   //click on generate report
                   _click(_link($link_generate, _near(_cell($sSubReport))));    
                   //select filter data
                   selectFilterValuesNace_Reports();
                   //write into csv
                   WriteToCSV(); 
                   //logout
                   logout12Twenty();
                   _log("NACE Baseline Task-Passed "+$loop);
               }
               else
               {
                   _log("NACE Baseline Task-Failed"+$loop);
               } 
         }
         else
         {
              _log("RunStatus N");
          }
    }//close for loop
 }//close function

/****************NALP BaseLine****************/
/*
    Method name	:  NALP_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Baseline NALP Reports .
    Input			  :   Excel file path,Report Name
*/
//NALP Reports Baseline
function NALP_Baseline($path,$stest)
{  //read excel data file
  	var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
    //for(var $loop=0;$loop<$data1.length;$loop++) 
   for(var $loop=0;$loop<2;$loop++) 
     {
      //read filter data  
      readFilterData($loop,$stest); 
              //check the runstatus
              if($sRunStatus=="Y") 
              {       //condition for site instance type 
                       if($sSiteType=="NALP Report (16)") 
                       {       //condition to site instance
                                if($sSite=="UCLA_Law")
                               {   //login
                               		login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                               } 
                               else
                               {
                                 _log("Not Logged In");
                               } 
                                // navigationToNALPReport();
                                navigationToStandardReport();
                                //click on NALP Reports
                         		_click(_link($tab_Nalp_Report));
                                //click on subreport type
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                // select filter data
                                selectFilterValuesNALP_Reports();
                                 //write into csv  
                                  WriteToCSV(); 
                                 //logout   
                                 logout12Twenty();
                         		_log("NALP Baseline Task-Passed"+$loop);
                       }
                        else
                       {
                                _log("NALP Baseline Task-Failed"+$loop);
                       } 
               
              }
             else
             {
                 _log("RunStatus N");
             }        
    }//close for loop
}//close function
/*********ABA Baseline*********/
/*
    Method name	:  ABA_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Baseline ABA Reports .
    Input			  :   Excel file path,Report Name
*/
//ABA Reports Baseline
function ABA_Baseline($path,$stest)
{  //read excel datafile
    var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();    
    //for(var $loop=0;$loop<$data1.length;$loop++) 
    for(var $loop=0;$loop<2;$loop++) 
     {//read filter data
      readFilterData($loop,$stest); 
              //check run status
              if($sRunStatus=="Y") 
              {        //check site instance type 
                       if($sSiteType=="ABA Report (4)") 
                       {       //check site instance
                                if($sSite=="Texas_Law")
                               {   //login to 12twenty
                               		login12Twenty($sUrlTexas_Law,$sUsername,$sPassword);
                               } 
                               else
                               {
                                	_log("No Action");
                               } 
                                //navigationToABAReport();
                                 navigationToStandardReport();
                                //click on ABA Reports
                         		_click(_link($tab_Aba_Report));
                                 //click on subreport generate link
                                _click(_link($link_generate, _near(_cell($sSubReport))));
                                //select filter data
                                selectFilterValuesABA_Reports();
                                //write base line results in csv   
                               WriteToCSV(); 
                               //logout from 12twenty
                               logout12Twenty();
                         		_log("ABA Baseline Task-Passed"+$loop);
                       }
                        else
                       {
                                _log("ABA Baseline Task-Failed"+$loop);
                       }
                
                }
             else
             {
                 _log("RunStatus N");
             }        
     
    }
}
/***************Class Status Baseline********************/
/*
    Method name	:  ClassStatus_Baseline
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Class Status Baseline Reports .
    Input			  :   Excel file path,Report Name
*/
function ClassStatus_Baseline($path,$stest)
{
  	//read excel datafile
    var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
    _continueOnError();  
      //for(var $loop=0;$loop<$data1.length;$loop++) 
   	    for(var $loop=38;$loop<40;$loop++) 
       { 
         //read filter dat
     	 readFilterData($loop,$stest); 
            //check Runstatus
            if($sRunStatus=="Y") 
            {   //condition for site instance type
                 if($sSiteType=="FTMBA") 
                 {    //condition for site instance
                      if($sSite=="Harvard_FTMBA")
                     {   
                       //login to Harvard FTMBA
                     login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                     }
                     else
                     {
                       //Login to Texas FTMBA 
                      login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                       _log("Login to texas mba"+$loop);
                     } 
                    //Navigation To Class Status Reports
                    navigationToClassStatusReport(); 
                    //selectFilterValuesFTMBA();
                    //Select filter values
                    SelectFilterValues_ClassStatus();
           		 } 
                  //Choose Site instance type as BSBA Reports
                  else if($sSiteType=="BSBA")  
                  {
                      //Login to BSBA
                      login12Twenty($sOhio_State_BSBA,$sUsername,$sPassword);
                      //Navigation To Class Status Report
                      navigationToClassStatusReport();   
                      //selectFilterValuesBSBA();
                    //Select Filter values 
                    SelectFilterValues_ClassStatus();
                  }
                  //choose site instance type as LAW
                 else if($sSiteType=="Law")
                 {
                    //Login
                    login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                    //navigation to class status reports
                    navigationToClassStatusReport();   
                    //selectFilterValuesUCLA_Law();
                   //choose filter values
                   SelectFilterValues_ClassStatus();
                 } 
                  //select site instance type as Centalized
                  else if($sSiteType=="Centralized")
                  { 	//select site instance
                        if($sSite=="UNC_Centralized")
                         {  //login to unc_centralized
                            login12Twenty($sUNC_Centralized,$sUsername,$sPassword);
                         }
                        else
                        {	//login to columbia_centralized
                             login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                        }
                    	//navigate to centralized class status reports
                       navigationToClassStatusReport();  
                       //select centralizd filter values 
                       selectFilterValuesCentralized();
                 }
                 else
                  {
                    _log("Excel data finish");
                  }
             //write into csv 
             WriteToCSV(); 
             //logout 12twenty 
             logout12Twenty();
               //log for if test is passed
              _log("Class Status Baseline Task-Passed"+$loop);
            }else{
              //log for if test is failed
              _log("Class Status Baseline Task-Failed"+$loop);
            }    
       }//close for loop
}//close function

/*******************MBA Actual Reports******************/
/*
    Method name	:  MBA_Actual
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Actual MBA Standard Reports.
    Input			  :   Excel file path,Report Name
*/
//MBA Actual Reports
function MBA_Actual($path,$stest)
{
   //read excel data file
  var $data1=_readExcelFile($path,$stest);
  //continue the script execution if failure occurs
      _continueOnError();    
  
   //for(var $loop=0;$loop<$data1.length;$loop++) 
     for(var $loop=0;$loop<2;$loop++) 
       
   {           
             //get filter data
              readFilterData($loop,$stest); 
             //check the run status
    		 if($sRunStatus=="Y") {
               	_log("Run Status Y");
               //check site jinstance type
               if($sSiteType=="MBA Standard Reports (12)") 
               {  
                 //check the condition site instance type
                 if($sSite=="Texas_FTMBA")
                  {   
                    //login 
                    login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                  }
                  else if($sSite=="Texas_PTMBA")
                 {
                    //login
                    login12Twenty($sTexas_PTMBA,$sUsername,$sPassword);
                 } 
                 else
                 {
                    //login
                    login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                 }
              
                 //navigationToMBAStandardReport(); 
                 navigationToStandardReport();
                 //click on MBA Reports	
                 _click(_link($tab_mba_report));
                 //click on sub report type
                 _click(_link($link_generate, _near(_cell($sSubReport))));
                 //select filter values
                 selectFilterValuesMBA_Standard_Reports();
     			 if($sSubReport =="Compensation Report "){
                          	//verify compensation report
                              WriteTempReport();
                              verifyCSVFiles();                   
                 }
                 else{
                           
                   		//read excel data and verify
                          readFromCSVAndVerify() ;
                  }
                     //logout                
                     logout12Twenty();
                 _log("MBA Standard Report Actual Task-Passed"+$loop);
           }
           else
            {
                 _log("MBA Standard Report Actual Task-Failed"+$loop);
            }
        }else
        {
           _log("Runstatus N");
         }      
    }//close for loop             
}//close function
/**********************BWR Actual***********************/
/*
    Method name	:  BusinessWeek_Actual
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Actual Business Week Reports.
    Input			  :   Excel file path,Report Name
*/
//BWR Actual Reports
function BusinessWeek_Actual($path,$stest)
{
   //read excel data file
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
      _continueOnError();    

   //for(var $loop=0;$loop<$data1.length;$loop++) 
     for(var $loop=0;$loop<16;$loop++) 
   { 
				//read filter data     
                readFilterData($loop,$stest); 
                //check run status  
                if($sRunStatus=="Y") 
               {  
                     //check site instance type 
                     if($sSiteType=="Business Week Report (10)") 
                     {    
                           //condition to site instance type
                           if($sSite=="Texas_FTMBA")
                            {   
                              //login 
                              login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                            }                 
                           else
                           {
                              //login
                              login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                           }

                     //navigationToBusinessWeekReport();
                     navigationToStandardReport();
                     //click on BWR reports 
                     _click(_link($tab_bwr_report));
                      //click on generate report
                     _click(_link($link_generate, _near(_cell($sSubReport))));
                    //select filter values
                     selectFilterValuesBusiness_Week_Reports();
                      if($sSubReport =="Forgone Salary"|"Top 15 Employers"|"Internships")
                      { 
                     //verify 45,79,90
                     	readFromCSVAndVerify() ; 
                      } else if($sSubReport=="Overall Employment" | "Base Salary, Signing Bonus, & Other Guaranteed Compensation"){
                        //verfiy 75,80
                       //write into temp file
                         BWR_Temp();
                      //verify temp file and actual
                       verifyCSVFiles(); 
                      }else{
                      	//verify question 83-87 Reports
                      	readAndVerify_BWR_Salary();
                      }                                           
                    //logout
                     logout12Twenty();
                     _log("Business Week Actual Task-Passed"+$loop);  
                }
                else
                {
                    _log("Business Week Actual Task-Failed"+$loop);  
                } 
          }else
          {		//run status failed
                 _log("Runstatus N");
          }                                      
    }//close for loop             
}//close function
/********************NACE Actual***********************/
/*
    Method name	:  NaceReports_Actual
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Actual NACE Reports.
    Input			  :   Excel file path,Report Name
*/
function NaceReports_Actual($path,$stest)
{
     //read excel data file
   		var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
         _continueOnError();    
       //for(var $loop=0;$loop<$data1.length;$loop++) 
	     for(var $loop=10;$loop<12;$loop++) 

       {  	  //read filter data	       
               readFilterData($loop , $stest);
               //check run status
               if($sRunStatus=="Y") 
              {
                //check site instance type
                  if($sSiteType=="NACE Report (7)") 
                  {  
                          //condition for site instance
                           if($sSite=="Fordham_Centralized")
                         {   
                          //login 
                         login12Twenty($sFordham_Centralized,$sUsername,$sPassword);
                         }
                         else
                         {
                          //login 
                          login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                         } 
               //navigationToNACEReport();
               navigationToStandardReport();
                //click on nace reports
                _click(_link($tab_nace_report));
                //click on generate report
               _click(_link($link_generate, _near(_cell($sSubReport))));    
                //select filter values 
               selectFilterValuesNace_Reports();
               //read ui data and verify with csv file 
               readFromCSVAndVerify(); 
               //logout 12twenty 
               logout12Twenty();
               _log("NACE Actual Task-Passed"+$loop);     
              }else{
              	_log("NACE Actual Task-Failed"+$loop);
              }
          }
          else
          {
          		_log("Runstatus N");
          }  
        }
 }
/*******************NALP Actual Reports******************/
/*
    Method name	:  NALP_Actual
    Author 	 	     :	
    Created Date  :  
    Description		:	This method is used to Explore Actual NALP Reports.
    Input			  :   Excel file path,Report Name
*/
//NALP Actual Reports
function NALP_Actual($path,$stest)
{
   //read excel data
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
      _continueOnError();    
  // for(var $loop=0;$loop<$data1.length;$loop++) 
     for(var $loop=0;$loop<2;$loop++) 
   	{		   //read filter data	
                readFilterData($loop,$stest); 
               //check run status
               if($sRunStatus=="Y") 
              {  
                    //condition for site instance type 
                    if($sSiteType=="NALP Report (16)") 
                    {  
                         //condition for site instance type
                         if($sSite=="UCLA_Law")
                          {   
                            //login
                            login12Twenty($sUCLA_Law,$sUsername,$sPassword);
                          }
                          else 
                         {
                            _log("Not Logged In");
                         } 
                    //navigationToNALPReport(); 
                    navigationToStandardReport();
                     //click on nalp report
                    _click(_link($tab_Nalp_Report));
                    //click on generate report
                     _click(_link($link_generate, _near(_cell($sSubReport))));
                    //select filter data
                     selectFilterValuesNALP_Reports();
                     //read ui data and verify with csv file
                     readFromCSVAndVerify() ; 
                     //logout
                     logout12Twenty();
                      _log("NALP Actual Task-Passed"+$loop);
                  }else{
                    _log("NALP Actual Task-Failed"+$loop);
                  }
            }else{
           		_log("RunStatus N");   
           }       
    }             
}
/****************ABA Actual***************/
/*
    Method name	 :  ABA_Actual
    Author 	 	     :	
    Created Date  :  
    Description		:	This method is used to Explore Actual ABA Reports.
    Input			  :   Excel file path,Report Name
*/
//ABA Actual Reports
function ABA_Actual($path,$stest)
{ 
   //read excel data
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
      _continueOnError();    
   for(var $loop=0;$loop<2;$loop++) 
   //for(var $loop=0;$loop<$data1.length;$loop++) 
   {           //read filter data   
                readFilterData($loop,$stest); 
      			//check run status
               if($sRunStatus=="Y") 
                {  
                      //check site instance type 
                      if($sSiteType=="ABA Report (4)") 
                      {  
                          //condition for site instance
                           if($sSite=="Texas_Law")
                            {   
                              //login to 12Twenty 
                              login12Twenty($sUrlTexas_Law,$sUsername,$sPassword);
                            }
                            else 
                           {
                              _log("Not Logged In");
                           }                           
                         //navigationToABAReport();
                         navigationToStandardReport();
                          //click on ABA Reports
                        _click(_link($tab_Aba_Report));
                          //click on subreport generate 
                         _click(_link($link_generate, _near(_cell($sSubReport))));
                         //read filter data
                         selectFilterValuesABA_Reports();
                         //read and verify baseline and actual 
                         readFromCSVAndVerify() ; 
                         //logout
                         logout12Twenty();
                        _log("ABA Actual Task-Passed"+$loop);
                 }else{
                    _log("ABA Actual Task-Failed"+$loop);
                  }
             }else{
                 _log("Runstatus N");
            }       
    }             
}
/*************Class Status Actual**************/
/*
    Method name	:  ClassStatus_Actual
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to Explore Actual Class Status Reports.
    Input			  :   Excel file path,Report Name
*/
function ClassStatus_Actual($path,$stest)
{
  //read excel data
   var $data1=_readExcelFile($path,$stest);
    //continue the script execution if failure occurs
      _continueOnError();    
   for(var $loop=38;$loop<40;$loop++) 
   //for(var $loop=0;$loop<$data1.length;$loop++) 
     {
			//read filter data   
            readFilterData($loop,$stest); 
      		//check run status          
       		if($sRunStatus=="Y") 
          	{ //check site instance type
               if($sSiteType=="FTMBA") 
               {  //condition to site instance Harvard FTMBA   
                  if($sSite=="Harvard_FTMBA")
                 {
                  //Login to Harvard FTMBA 
                 login12Twenty($sHarvard_FTMBA,$sUsername,$sPassword);
                 }
                 else
                 { 
                  //Login To Texas FTMBA 
                  login12Twenty($sTexas_FTMBA,$sUsername,$sPassword);
                   _log("Login to texas mba"+$loop);
                 } 
                //Navigation To Class Status Reports 
                navigationToClassStatusReport(); 
                //selectFilterValuesFTMBA();
                 //Select Filter values 
                 SelectFilterValues_ClassStatus();
              } 
              //condition for site instance type
              else if($sSiteType=="BSBA")  
              {
              //Login to BSBA  
              login12Twenty($sOhio_State_BSBA,$sUsername,$sPassword);
              //Navigation to Class Reports  
              navigationToClassStatusReport();   
              //selectFilterValuesBSBA();
                //choose filter values 
                SelectFilterValues_ClassStatus();
              }
               //condition for site instance type is LAW
               else if($sSiteType=="Law")
               {
              //Login to UCLA_LAW   
              login12Twenty($sUCLA_Law,$sUsername,$sPassword);
              //navigate to class status reports   
              navigationToClassStatusReport();   
              //selectFilterValuesUCLA_Law();
                 //choose filter values
                 SelectFilterValues_ClassStatus();
               }
              //condition for site instance type is Centralized
              else if($sSiteType=="Centralized")
             { 
               //check site type as UNC_Centralized
               if($sSite=="UNC_Centralized")
               {  
                //login to UNC Centralized 
                login12Twenty($sUNC_Centralized,$sUsername,$sPassword);
               }
                else
                {
                //Login to Columbia Centralized  
                login12Twenty($sColumbia_Centralized,$sUsername,$sPassword);
                }
               //navigate to class status
               navigationToClassStatusReport();  
               //select filter values
               selectFilterValuesCentralized();
             }
           else
          {
              _log("Excel data finish");
          }
     	 readFromCSVAndVerify() ; 
     	logout12Twenty();
        _log("Class Status Actual Task-Passed"+$loop);      
      } else{
        _log("Class Status Actual Task-Failed"+$loop);      
      }   
     }
}

   /*************Navigate Reports**************/
/*
    Method name	:  navigationToStandardReport
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to navigate Standard Reports tab.
    Input			  :   NA
*/
//Navigate to Reports
function navigationToStandardReport()
{   
    //click on Report 
	_click(_link($link_Report));
    //click on Standard Reports
	_click(_link($tab_Standard_Report));	
}
/*
    Method name	:  navigationToClassStatusReport
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to navigate Class Status tab.
    Input			  :   NA
*/
function navigationToClassStatusReport()
{
	_click(_link($link_Report));
	_click(_link($tab_12twenty_Reports));
	_click(_link($link_student_Outcomes));
}

          /**************Select Filter Data*************/
/*
    Method name	:  selectFilterValuesMBA_Standard_Reports
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
*/
function selectFilterValuesMBA_Standard_Reports()
{
	_setSelected(_select($gradYearId), $sGradYear);
	_setSelected(_select($gradTerm), $sGradTerm);
	_log("Site instance:"+$sSite);
    if($sSite=="Texas_PTMBA")
    {
      _setSelected(_select($programId), $sProgram);
      _log("ProgramId:"+$sProgram);
    }

    if($sSite != "Texas_PTMBA" )
    {
        _setSelected(_select($job_PhaseId),$sJobPhase);

        _setSelected(_select($drpdwn_jointDegree), $sJointDegree);
    }

    _click(_submit($generateReport));
}
/*
    Method name	:  selectFilterValuesBusiness_Week_Reports
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
*/
function selectFilterValuesBusiness_Week_Reports()
{
	_setSelected(_select($gradYearId), $sGradYear);
	_setSelected(_select($gradTerm), $sGradTerm);	
    _click(_submit($generateReport));
}
/*
    Method name	:  selectFilterValuesNALP_Reports
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
*/
function selectFilterValuesNALP_Reports()
{
	_setSelected(_select($gradYearId), $sGradYear);
	_setSelected(_select($gradTerm), $sGradTerm);
    _setSelected(_select($drpdwn_offertiming), $sOfferTiming);
   
    _click(_submit($generateReport));
}
/*
    Method name	:  selectFilterValuesNace_Reports
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
*/
function  selectFilterValuesNace_Reports()
{
  _setSelected(_select($gradYearId), $sGradYear);
_setSelected(_select($gradTerm), $sGradTerm);
  
  if($sProgram=="Business")
  {
    _click(_button($departmentAll));
    _setValue(_textbox($txt_departSearch), "buss");
    _check(_checkbox($sProgram));
  }

  if($sCollege=="FC AT ROSE HILL")
  { 
    _click(_button($btn_all));
    _check(_checkbox($sCollege));
  }
_setSelected(_select($degreeId),  $sDegreelevel);
_check(_radio($sReportingMajor));
_click(_submit($generateReport));
}
/*
    Method name	:  selectFilterValuesABA_Reports
    Author 	 	    :	
    Created Date  :  
    Description		:	This method is used to get filter data from data file.
    Input			  :   NA
*/
function selectFilterValuesABA_Reports()
{
	_setSelected(_select($gradYearId), $sGradYear);
	_setSelected(_select($gradTerm), $sGradTerm);
    _setSelected(_select($drpdwn_offertiming), $sOfferTiming);
      if($sCutoffDate == "Without")
      {
        _setValue(_textbox($txtbox_cutoffdate), "");
      }
   _click(_submit($generateReport));
}
/*
    Method name	:  SelectFilterValues_ClassStatus
    Author 	 	    :	
    Created Date  :  
    Description		:	Select filter data from excel for class status (FTMBA/BSBA/UCLA_LAW)
    Input			  :   NA
*/
   function SelectFilterValues_ClassStatus()
  {
   _click(_button($default_gradYear));
  _check(_checkbox($sGradYear));
   _uncheck(_checkbox($default_gradYear));
  _setSelected(_select($gradTerm), $sGradTerm);
  //_setSelected(_select("AssignedAdvisorId"), "All");
    if($sSiteType=="BSBA")
    {
      _setSelected(_select($degreeId), $sDegreelevel);
      _setSelected(_select($underGradMajor),$sUndergradMajor);
  	} 
  _setSelected(_select($job_PhaseId), $sJobPhase);
  _setSelected(_select($workAuthId),$sWorkAuth);
  _setSelected(_select($empType), $sEmpType);
  _setSelected(_select($rumorJob), $sRumorJob);
  _setSelected(_select($includeReport), $sIncludeRoport);
  _setSelected(_select($offerTimingId),$sOfferTiming);
  //_setSelected(_select($underGradMajor),$sUndergradMajor);
  _click(_button($getResult));
  }
/*
    Method name	:  selectFilterValuesCentralized
    Author 	 	    :	
    Created Date  :  
    Description		: select filter data from excel for Centralized	class status(Columbia/UNC)
    Input			  :   NA
*/
function selectFilterValuesCentralized()
{
   _click(_button($default_gradYear));
_check(_checkbox($sGradYear));
 _uncheck(_checkbox($default_gradYear));
_setSelected(_select($gradTerm), $sGradTerm);
//_setSelected(_select("AssignedAdvisorId"), "All");
_setSelected(_select($degreeId), $sDegreelevel);
 if($sJobPhase!="Internship")
  {   
_setSelected(_select($job_PhaseId), $sJobPhase);
  }
_setSelected(_select($workAuthId),$sWorkAuth);
_setSelected(_select($empType), $sEmpType);
_setSelected(_select($rumorJob), $sRumorJob);
_setSelected(_select($includeReport), $sIncludeRoport);
_setSelected(_select($offerTimingId),$sOfferTiming);
_setSelected(_select($underGradMajor),$sUndergradMajor);
_setSelected(_select($collegeId), $sCollege);
  _log("Site instance:"+$sSite);
 if($sSite=="Columbia_Centralized")
{
_setSelected(_select($department),$sDepartment);
}
_click(_button($getResult));
}
     /************Logout*********/
/*
    Method name	:  logout12Twenty
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to Logout from 12Twenty.
    Input			  :   NA
*/
function logout12Twenty(){
	_click(_span($logout_icon));
	_click(_link($btn_Logout));
}
/****************Write,Read and Verify*******************/
/*
    Method name	:  WriteToCSV
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to get table content from UI,push into array and write into csv.
    Input			  :   NA
*/
function WriteToCSV(){
	//read data from app    	
    _log("Enter");
    //get table content from ui
	$Tabledata = _getTableContents(_table($table_id));
    //push data into array
    for (var $row = 0; $row < $Tabledata.length; $row++) {
      	$arr[$arr.length] = $Tabledata[$row];
    }
    //write functionality
     Write();  	   	
}
/*
    Method name	:  Write
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to write into csv.
    Input			  :   NA
*/
// write ui data into csv file
  function Write(){  
      if(_exists("D:\\Allworkspace\\12twenyReport\\Baseline\\Build_No"))
      {
        _log("Enter1");
       //write in to csv file
      _writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
      _log(1); 
      }
      else
      {
         //create a directory and write in to csv file
	     var $file = new java.io.File("D:\\Allworkspace\\12TwentyReport\\Baseline/Build_No").mkdir();
        _writeCSVFile($Tabledata,$path_baseline+$DatafileName+".csv");
        _log(2);
      }
  }   
/*
    Method name	:  WriteIntoMBA_Compensation_Report
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to write into MBA Compensation Reports(Baseline).
    Input			  :   NA
*/
var $table_id1 = "report-data-";
//write mba standard reports into csv
function WriteIntoMBA_Compensation_Report(){      
      //fetch no.of tables
        var $tableCount=_count("_table","/report-data/");
         _log($tableCount)
             for(var $k=0;$k<$tableCount;$k++){   
               var $tableIndex=$k+1;
                //get table data
               $Tabledata = _getTableContents(_table($table_id1+$tableIndex));
               for (var $row = 0; $row < $Tabledata.length; $row++) {
                 $arr[$arr.length] = $Tabledata[$row];
               }
               //write into csv 
               Write();                                                                      
             }          
}

/*
    Method name	:  readFromCSVAndVerify
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to get table content from UI,read baseline file and verify.
    Input			  :   NA
*/
//read data from ui and verify with csv
function readFromCSVAndVerify(){
      
    //get data from ui
	$actual = _getTableContents(_table($table_id));
    //get data from csv
	$expected =_readCSVFile("D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv", "," );
    //verify functionality 
    Verify();
}
/*
    Method name	:  Verify
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to Verify.
    Input			  :   NA
*/
//verify functionality
function Verify(){  
	for (var $i=0; $i<$actual.length && $i<$expected.length; $i++){
			for (var $j=0; $j<$actual[$i].length && $j<$expected[$i].length; $j++)
	        {
				if($actual[$i][$j]==$expected[$i][$j])
	            {
	              _log("Expected: " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);
			     }
	          else
	            {
                  //condition for if file exits or not
                  if(_fileExists("D:\\Allworkspace\\12TwentyReport\\Actual\\Build_No\\"+$DatafileName+".csv"))
                  {
                     //update data if error occurs
                     updateOnError($i,$j,$actual[$i][$j], $expected[$i][$j]);
                  }
                  else
                  {
                      //create a directory
                      var $file = new java.io.File("D:\\Allworkspace\\12TwentyReport\\Actual/Build_No").mkdir();
                        //copy source file to destination file
                      _copyFile("D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv", "D:\\Allworkspace\\12TwentyReport\\Actual\\Build_No\\"+$DatafileName+".csv");
                    //  $TestFail=$TestFail+1;
                   // _writeCSVFile($TestFail,"D:\\Allworkspace\\12twenyActual\\FailedTestCase.csv",true);
                    //update data if any errors occured 
                    updateOnError($i,$j,$actual[$i][$j], $expected[$i][$j]);
                    //compare baseline ,actual if failure occurs to continue call onScriptFailure.
                   _assertEqual($actual[$i][$j],$expected[$i][$j]);
                  }
	              _log("Verificaton failed :=Expected data in failed test case " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);
	           }
             // _assertEqual($actual[$i][$j],$expected[$i][$j]);
	              _log("Expected: " + $expected[$i][$j]+"Actual "+$actual[$i][$j]);  
	    }
	}
}
/*
    Method name	:  updateOnError
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to update error data.
    Input			  :   NA
*/
//update csv if data varied
function updateOnError($x,$y,$actualData,$expectedData)
{
 //read csv actual file 
 var $a=_readCSVFile("D:\\Allworkspace\\12TwentyReport\\Actual\\Build_No\\"+$DatafileName+".csv");
  //update data actual data and expeted data
  $a[$x][$y] = $actualData+"***"+$expectedData;
  //write into actual file
  _writeCSVFile($a,"D:\\Allworkspace\\12TwentyReport\\Actual\\Build_No\\"+$DatafileName+".csv",true);
  
}

/*
    Method name	:  onScriptFailure
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to continue verify data if failure occurs.
    Input			  :   NA
*/
//continue the verify functionality if failure error occured
function onScriptFailure($e)
{
   //_logExceptionAsFailure($e);
   _log("Script failing for Report:"+$DatafileName+".csv");
   return true; // Forces Sahi to continue execution and not stop at error. Since Sahi Pro V4.3
}


/*
    Method name	:  WriteTempReport
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to write MBA Compensation reports into Temporary file to verify with baseline results.
    Input			  :   NA
*/
//write into temporary file
function WriteTempReport(){
       //fetch no.of tables
        var $tableCount=_count("_table","/report-data/");
         _log($tableCount)
            for(var $k=0;$k<$tableCount;$k++){   
                var $tableIndex=$k+1;                 
                $Tabledata1 = _getTableContents(_table($table_id1+$tableIndex));
                for (var $row = 0; $row < $Tabledata1.length; $row++) {
                  $arr[$arr.length] = $Tabledata1[$row];
                }
                _log($Tabledata1) ;
                if(_exists("D:\\Allworkspace\\Temporary"))
                {
                  _log("Enter1");
                  _writeCSVFile($Tabledata1,"D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv");
                }
                else
                {
                  var $file = new java.io.File("D:\\Allworkspace\\Temporary").mkdir();
                  _writeCSVFile($Tabledata1,"D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv");
                }                                                         
        }           
}

/*
    Method name	:  verifyCSVFiles
    Author 	 	    :	
    Created Date  :  
    Description		:	This Method is used to read MBA Compensation reports actual,expected results from csv and verify.
    Input			  :   NA
*/
//read and verify MBA table data
function verifyCSVFiles(){ 
    //get data from temporary file
	$actual = _readCSVFile("D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv", "," );
    //get data from baseine csv file
	$expected =_readCSVFile("D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv", "," );
    //verify data
    Verify();
  //delete temporary files if exists
  /*if(_exists("D:\\Allworkspace\\Temporary")){
  		_deleteFile("D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv");
  }*/
  // full path of folder inside which we want to delete for files and folders
  var $dir = new java.io.File("D:\\Allworkspace\\Temporary");  
 if ($dir.exists()) {
	var $files = $dir.listFiles();
  if($files.length>0){
	for (var $i=0; $i<$files.length; $i++) {
      $files[$i].delete();	
	}
  }
}          
else {
	_log('Directory does not exist. Nothing to enumerate');
}
$dir.delete();
}

/************************Write into BWR reports diff table ids(83-87)******************************/
/*
    Method name	:  WriteToCSV_BWR_Salary
    Author 	 	    :	
    Created Date  :  30/12/15
    Description		:	This Method is used to Write BWR reports into csv from Q.83-Q.87.
    Input			  :   NA
*/
function WriteToCSV_BWR_Salary(){	   	                 
        $Tabledata = _getTableContents(_table($table_id2));
        for (var $row = 0; $row < $Tabledata.length; $row++) {
          $arr[$arr.length] = $Tabledata[$row];
        }
        Write();
}
/******************Verify BWR Reports(83-87)*******************/
/*
    Method name	:  readAndVerify_BWR_Salary
    Author 	 	    :	
    Created Date  :  30/12/15
    Description		:	This Method is used to verify BWR reports from Q.83-Q.87.
    Input			  :   NA
*/
function readAndVerify_BWR_Salary(){
  
    $actual = _getTableContents(_table($table_id2));      
	$expected =_readCSVFile("D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv", "," );
    Verify();	
}
/**************Get BWR(Q.75,Q.80) List Data****************/
/*
    Method name	:  writeBWR_List
    Author 	 	    :	
    Created Date  :  30/12/15
    Description		:	This Method is used to write BWR list format reports into csv from Q.75, 77-78,80-82.
    Input			  :   NA
*/
function writeBWR_List(){
     //var $listdata = [];
     var $listdata=_collectAttributes("_listItem","/.*/","sahiText",_in(_list($list_data))); 
      _log($listdata.length);    
     _writeCSVFile([$listdata],"D:\\Allworkspace\\12TwentyReport\\Baseline\\Build_No\\"+$DatafileName+".csv");
}
/**************************write bwr(Q.75,Q.80)into temp file**************************/
/*
    Method name	:  BWR_Temp
    Author 	 	    :	Venu
    Created Date  :  30/12/15
    Description		:	This Method is used to write BWR (table & list Q.75, 77-78,80-82) reports into temporary csv.
    Input			  :   NA
*/
function BWR_Temp(){
  	var $contents = [];
	$contents = _getTableContents(_table($table_id));
    _log($contents.length);
   	_writeCSVFile($contents, "D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv");  
   
    var $listdata=_collectAttributes("_listItem","/.*/","sahiText",_in(_list($list_data))); 
    _writeCSVFile([$listdata], "D:\\Allworkspace\\Temporary\\Temp_"+$DatafileName+".csv");
}